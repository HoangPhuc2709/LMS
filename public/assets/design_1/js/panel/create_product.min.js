/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!*******************************************************!*\
  !*** ./resources/js/design_1/panel/create_product.js ***!
  \*******************************************************/
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
(function ($) {
  "use strict";

  $('body').on('change', '.js-create-property-images', function (event) {
    var $this = $(this);
    var imgSrc = URL.createObjectURL(event.target.files[0]);
    var divCol = $this.attr('data-col');
    var inputName = $this.attr('name');
    var parentId = $this.attr('data-parent-id');
    var parent = $this.closest('.create-media-card');
    var html = "<div class=\"create-media-card__img d-flex align-items-center justify-content-center w-100 h-100\">\n                                <img src=\"".concat(imgSrc, "\" alt=\"\" class=\"img-cover rounded-15\">\n\n                                <a href=\"#!\" class=\"js-product-images-delete create-media-card__delete-btn d-flex align-items-center justify-content-center\">\n                                    <span class=\"d-flex align-items-center justify-content-center p-4\">\n                                        ").concat(dangerCloseIcon, "\n                                    </span>\n                                </a>\n                            </div>");
    parent.find('.create-media-card__label').remove();
    parent.append(html);
    var random = randomString(5);
    var labelHtml = "<div class=\"".concat(divCol, " mt-12 js-product-image-col\">\n                <div class=\"create-media-card position-relative p-4\">\n                    <label for=\"images_").concat(random, "\" class=\"create-media-card__label w-100 h-100 rounded-15 flex-column align-items-center justify-content-center cursor-pointer\">\n                        <div class=\"create-media-card__circle d-flex align-items-center justify-content-center rounded-circle\">\n                            ").concat(directSendIcon, "\n                        </div>\n\n                        <div class=\"mt-8 font-12 text-primary\">").concat(uploadAnImageLang, "</div>\n                    </label>\n\n                    <input type=\"file\" name=\"").concat(inputName, "\" id=\"images_").concat(random, "\" class=\"js-create-property-images\" data-col=\"").concat(divCol, "\" data-parent-id=\"").concat(parentId, "\" accept=\"image/*\">\n                </div>\n            </div>");
    $('#' + parentId).append(labelHtml);
  });
  function handleSpecificationTags(elClassName) {
    if (jQuery().tagsinput) {
      var input_tags = $('.' + elClassName);
      input_tags.tagsinput({
        tagClass: 'badge badge-primary py-5',
        maxTags: input_tags.data('max-tag') ? input_tags.data('max-tag') : 10
      });
    }
  }
  $('body').on('change', '.js-product-content-locale', function (e) {
    e.preventDefault();
    var $this = $(this);
    var $form = $(this).closest('.js-content-form');
    var locale = $this.val();
    var productId = $this.attr('data-product-id');
    var item_id = $this.attr('data-id');
    var relation = $this.attr('data-relation');
    var fields = $this.attr('data-fields');
    fields = fields.split(',');
    $this.addClass('loadingbar gray');
    var path = '/panel/store/products/' + productId + '/getContentItemByLocale';
    var data = {
      item_id: item_id,
      locale: locale,
      relation: relation
    };
    $.post(path, data, function (result) {
      if (result && result.item) {
        var item = result.item;
        Object.keys(item).forEach(function (key) {
          console.log(key);
          var value = item[key];
          if ($.inArray(key, fields) !== -1) {
            var elKey = key;
            if (relation === 'selectedSpecifications') {
              elKey = 'tags';
              if (item.type === 'textarea') {
                elKey = 'summary';
              }
            }
            var element = $form.find('.js-ajax-' + elKey);
            if (elKey === 'tags') {
              element.tagsinput('destroy');
            }
            element.val(value);
            if (elKey === 'tags') {
              var randomClass = 'tags-' + randomString();
              element.addClass(randomClass);
              handleSpecificationTags(randomClass);
            }
          }
        });
        $this.removeClass('loadingbar gray');
      }
    }).fail(function (err) {
      $this.removeClass('loadingbar gray');
    });
  });

  /*********
  * Specifications
  * */

  function handleSpecificationInputType($form, specificationId) {
    var $loadingCard = $form.find('.js-specification-extra-fields-loading');
    var $contentCard = $form.find('.js-specification-extra-fields');
    $loadingCard.removeClass("d-none");
    $contentCard.addClass("d-none");
    $.get('/panel/store/products/specifications/' + specificationId + '/get', function (result) {
      if (result) {
        $loadingCard.addClass("d-none");
        $contentCard.removeClass("d-none");
        var specification = result.specification,
          multiValues = result.multiValues;
        var multiValuesInput = $form.find('.js-multi-values-input');
        var summaryInput = $form.find('.js-summery-input');
        var allowSelectionInput = $form.find('.js-allow-selection-input');
        $form.find('.js-input-type').val(specification.input_type);
        allowSelectionInput.find('input').prop('checked', false);
        if (specification.input_type === 'multi_value') {
          multiValuesInput.removeClass('d-none');
          allowSelectionInput.removeClass('d-none');
          summaryInput.addClass('d-none');
          var $select = $form.find('.multi_values-select2');
          var html = '';
          if (multiValues) {
            var _iterator = _createForOfIteratorHelper(multiValues),
              _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                var multiValue = _step.value;
                html += "<option value=\"".concat(multiValue.id, "\">").concat(multiValue.title, "</option>");
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
          $select.html(html);
          console.log($select);
          handleSelect2($select);
        } else {
          multiValuesInput.addClass('d-none');
          allowSelectionInput.addClass('d-none');
          summaryInput.removeClass('d-none');
        }
        allowSelectionInput.find('input').prop('checked', false);
      }
    });
  }
  function handleSpecificationSelect2(elClassName) {
    var el = $('.' + elClassName);
    if (el && el.length) {
      el.select2({
        placeholder: $(this).data('placeholder')
        //minimumInputLength: 3,
        //allowClear: true,
        /*ajax: {
            url: '/panel/store/products/specifications/search',
            dataType: 'json',
            type: "POST",
            quietMillis: 50,
            data: function (params) {
                return {
                    term: params.term,
                    category_id: el.attr('data-category'),
                };
            },
            processResults: function (data) {
                return {
                    results: $.map(data, function (item) {
                        return {
                            text: item.title,
                            id: item.id,
                            input_type: item.input_type,
                        }
                    })
                };
            }
        }*/
      });

      el.on('change', function (e) {
        var specificationId = e.target.value;
        var $form = $(e.target).closest('.specification-form');
        handleSpecificationInputType($form, specificationId);
      });
    }
  }
  $(document).ready(function () {
    handleSelect2($('.select-multi-values-select2'));
    handleSpecificationSelect2('search-specification-select2');
  });
})(jQuery);
/******/ })()
;